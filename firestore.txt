
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Waypoints: Users can only manage their own waypoints.
    match /waypoints/{waypointId} {
      // A user can read or delete their own waypoints.
      allow read, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // A user can create a new waypoint.
      // - It must belong to them.
      // - It must have a valid name, position, and type.
      // - The reminder field, if it exists, must be a string.
      allow create: if request.auth != null 
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.name is string && request.resource.data.name.size() > 0
                    && request.resource.data.position is latlng
                    && request.resource.data.type in ['stop', 'shop', 'poi']
                    && (!('reminder' in request.resource.data) || request.resource.data.reminder is string);

      // Disallow updates to prevent changing ownership or critical data.
      // Users should delete and recreate if a major change is needed.
      allow update: if false;
    }

    // Announcements: Logged-in users can read all, create new ones,
    // upvote, and only delete their own.
    match /announcements/{announcementId} {
      // Anyone who is logged in can read announcements.
      allow read: if request.auth != null;

      // A logged-in user can create an announcement.
      // - The new announcement must belong to them.
      // - It must have a valid message (non-empty, reasonable length), type, and position.
      // - The timestamp must be the server's timestamp.
      // - Upvotes must start at 0.
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.userName == request.auth.token.name
                    && request.resource.data.message is string
                    && request.resource.data.message.size() > 0 && request.resource.data.message.size() < 280
                    && request.resource.data.type in ['info', 'delay', 'accident']
                    && request.resource.data.position is latlng
                    && request.resource.data.timestamp == request.time
                    && request.resource.data.upvotes == 0;

      // A logged-in user can delete an announcement only if they created it.
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // A logged-in user can upvote an announcement.
      // - They can only increment the upvotes by 1.
      // - They cannot change any other field. This is critical for security.
      allow update: if request.auth != null
                     && request.resource.data.upvotes == resource.data.upvotes + 1
                     && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes']);
    }
  }
}
